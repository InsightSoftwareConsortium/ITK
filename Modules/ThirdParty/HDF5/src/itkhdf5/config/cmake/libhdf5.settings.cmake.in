        SUMMARY OF THE HDF5 CONFIGURATION
        =================================

General Information:
-------------------
                   HDF5 Version: @HDF5_PACKAGE_VERSION_STRING@
                  Configured on: @CONFIG_DATE@
                  Configured by: @CMAKE_GENERATOR@
                    Host system: @CMAKE_HOST_SYSTEM@
              Uname information: @CMAKE_SYSTEM_NAME@
                       Byte sex: @BYTESEX@
             Installation point: @CMAKE_INSTALL_PREFIX@

Compiling Options:
------------------
                     Build Mode: @CMAKE_BUILD_TYPE@
              Debugging Symbols: @HDF5_ENABLE_SYMBOLS@
                        Asserts: @HDF5_ENABLE_ASSERTS@
                      Profiling: @HDF5_ENABLE_PROFILING@
             Optimization Level: @HDF5_ENABLE_OPTIMIZATION@

Linking Options:
----------------
                      Libraries: @BUILD_NAME_EXT@
  Statically Linked Executables: @BUILD_STATIC_EXECS@
                        LDFLAGS: @CMAKE_SHARED_LINKER_FLAGS@
                     H5_LDFLAGS: @H5_LDFLAGS@
                     AM_LDFLAGS: @AM_LDFLAGS@
                Extra libraries: @LINK_LIBS@
                       Archiver: @CMAKE_AR@
                         Ranlib: @CMAKE_RANLIB@

Languages:
----------
                              C: YES
                     C Compiler: @CMAKE_C_COMPILER@ @CMAKE_C_COMPILER_VERSION@
                       CPPFLAGS: @CPPFLAGS@
                    H5_CPPFLAGS: @H5_CPPFLAGS@
                    AM_CPPFLAGS: @AM_CPPFLAGS@
                         CFLAGS: @CMAKE_C_FLAGS@
                      H5_CFLAGS: @H5_CFLAGS@
                      AM_CFLAGS: @AM_CFLAGS@
               Shared C Library: @H5_ENABLE_SHARED_LIB@
               Static C Library: @H5_ENABLE_STATIC_LIB@

                        Fortran: @HDF5_BUILD_FORTRAN@
@BUILD_FORTRAN_CONDITIONAL_TRUE@               Fortran Compiler: @CMAKE_Fortran_COMPILER@ @CMAKE_Fortran_COMPILER_VERSION@
@BUILD_FORTRAN_CONDITIONAL_TRUE@                  Fortran Flags: @CMAKE_Fortran_FLAGS@
@BUILD_FORTRAN_CONDITIONAL_TRUE@               H5 Fortran Flags: @H5_FCFLAGS@
@BUILD_FORTRAN_CONDITIONAL_TRUE@               AM Fortran Flags: @AM_FCFLAGS@
@BUILD_FORTRAN_CONDITIONAL_TRUE@         Shared Fortran Library: @H5_ENABLE_SHARED_LIB@
@BUILD_FORTRAN_CONDITIONAL_TRUE@         Static Fortran Library: @H5_ENABLE_STATIC_LIB@

                            C++: @HDF5_BUILD_CPP_LIB@
@BUILD_CXX_CONDITIONAL_TRUE@                   C++ Compiler: @CMAKE_CXX_COMPILER@ @CMAKE_CXX_COMPILER_VERSION@
@BUILD_CXX_CONDITIONAL_TRUE@                      C++ Flags: @CMAKE_CXX_FLAGS@
@BUILD_CXX_CONDITIONAL_TRUE@                   H5 C++ Flags: @H5_CXXFLAGS@
@BUILD_CXX_CONDITIONAL_TRUE@                   AM C++ Flags: @AM_CXXFLAGS@
@BUILD_CXX_CONDITIONAL_TRUE@             Shared C++ Library: @H5_ENABLE_SHARED_LIB@
@BUILD_CXX_CONDITIONAL_TRUE@             Static C++ Library: @H5_ENABLE_STATIC_LIB@

                            JAVA: @HDF5_BUILD_JAVA@
@BUILD_JAVA_CONDITIONAL_TRUE@                 JAVA Compiler: @CMAKE_Java_COMPILER@ @Java_VERSION@

Features:
---------
                   Parallel HDF5: @HDF5_ENABLE_PARALLEL@
Parallel Filtered Dataset Writes: @PARALLEL_FILTERED_WRITES@
              Large Parallel I/O: @LARGE_PARALLEL_IO@
              High-level library: @HDF5_BUILD_HL_LIB@
                Build HDF5 Tests: @BUILD_TESTING@
                Build HDF5 Tools: @HDF5_BUILD_TOOLS@
                    Threadsafety: @HDF5_ENABLE_THREADSAFE@
             Default API mapping: @DEFAULT_API_VERSION@
  With deprecated public symbols: @HDF5_ENABLE_DEPRECATED_SYMBOLS@
          I/O filters (external): @EXTERNAL_FILTERS@
                             MPE: @H5_HAVE_LIBLMPE@
                      Direct VFD: @H5_HAVE_DIRECT@
              (Read-Only) S3 VFD: @H5_HAVE_ROS3_VFD@
            (Read-Only) HDFS VFD: @H5_HAVE_LIBHDFS@
                         dmalloc: @H5_HAVE_LIBDMALLOC@
  Packages w/ extra debug output: @INTERNAL_DEBUG_OUTPUT@
                     API Tracing: @HDF5_ENABLE_TRACE@
            Using memory checker: @HDF5_ENABLE_USING_MEMCHECKER@
 Memory allocation sanity checks: @HDF5_MEMORY_ALLOC_SANITY_CHECK@
          Function Stack Tracing: @HDF5_ENABLE_CODESTACK@
       Strict File Format Checks: @HDF5_STRICT_FORMAT_CHECKS@
    Optimization Instrumentation: @HDF5_Enable_Instrument@
