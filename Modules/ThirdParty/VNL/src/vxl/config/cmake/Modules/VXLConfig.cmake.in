# vxl/config/cmake/VXLConfig.cmake.in
#   also configured by CMake to
# @PROJECT_BINARY_DIR@/VXLConfig.cmake
#
# This CMake module is configured by VXL's build process to export the
# project settings for use by client projects.  A client project may
# find VXL and include this module using the FIND_PACKAGE command:
#
#  find_package(VXL)
#
# After this command executes, projects may test VXL_FOUND for whether
# VXL has been found.  If so, the settings listed below in this file
# have been loaded and are available for use.
#
# Typically, a client project will include UseVXL.cmake from the
# directory specified by the VXL_CMAKE_DIR setting:
#
#  find_package(VXL)
#  if(VXL_FOUND)
#    include(${VXL_CMAKE_DIR}/UseVXL.cmake)
#  else()
#    message("VXL_DIR should be set to the VXL build directory.")
#  endif()
#
# See vxl/config/cmake/UseVXL.cmake for details.
#

# The build settings file.
set(VXL_BUILD_SETTINGS_FILE "@VXL_BUILD_SETTINGS_FILE@")

# The VXL library directory.
set(VXL_LIBRARY_DIR "@CMAKE_LIBRARY_OUTPUT_DIRECTORY@")

# The VXL CMake support directory.
# Clients projects should not use the Find*.cmake files in this directory.
set(VXL_CMAKE_DIR "@VXL_CMAKE_DIR@")

# Doxygen Support
set(VXL_CMAKE_DOXYGEN_DIR "@VXL_CMAKE_DOXYGEN_DIR@")



# VXL Configuration options. You don't have to build with the same options as VXL, but it often helps.
set(BUILD_SHARED_LIBS "@BUILD_SHARED_LIBS@")
set(VXL_BUILD_TESTS "@BUILD_TESTS@")
set(VXL_BUILD_EXAMPLES "@VXL_BUILD_EXAMPLES@")
set(VXL_EXTRA_CMAKE_CXX_FLAGS "@VXL_EXTRA_CMAKE_CXX_FLAGS@")
set(VXL_EXTRA_CMAKE_C_FLAGS "@VXL_EXTRA_CMAKE_C_FLAGS@")
set(VXL_EXTRA_CMAKE_EXE_LINKER_FLAGS "@VXL_EXTRA_CMAKE_EXE_LINKER_FLAGS@")
set(VXL_EXTRA_CMAKE_MODULE_LINKER_FLAGS "@VXL_EXTRA_CMAKE_MODULE_LINKER_FLAGS@")
set(VXL_EXTRA_CMAKE_SHARED_LINKER_FLAGS "@VXL_EXTRA_CMAKE_SHARED_LINKER_FLAGS@")

# VXL has many parts that are optional, depending on selections made
# when building.  The stanzas below give a consistent (though
# pedantic) interface to each part.  Clients use these settings to
# determine whether a part was built (_FOUND), where its headers are
# located (_INCLUDE_DIR) and in some cases what libraries must be
# linked to use the part (_LIBRARIES).  Most client projects will
# likely still refer to individual VXL libraries such as vcl, for
# example, by hard-wired "vcl" instead of using the variable
# VXL_VCL_LIBRARIES, but it is there just in case.

set(VXL_VCL_FOUND "YES" ) # VXL vcl is always FOUND.  It is not optional.
set(VXL_VCL_INCLUDE_DIRS "@VCL_INCLUDE_DIRS@")
set(VXL_VCL_INCLUDE_DIR "@VCL_INCLUDE_DIR@") #For backward compatibility
set(VXL_VCL_LIBRARIES "vcl")

set(VXL_CORE_FOUND "YES" ) # VXL core is always FOUND.  It is not optional.
set(VXL_CORE_INCLUDE_DIRS "@VXLCORE_INCLUDE_DIRS@")
set(VXL_CORE_INCLUDE_DIR "@VXLCORE_INCLUDE_DIR@") #For backward compatibility
# VXL core has many libraries

set(VXL_CORE_VIDEO_FOUND "@CORE_VIDEO_FOUND@" )
set(VXL_CORE_VIDEO_INCLUDE_DIRS "@VXLCORE_INCLUDE_DIRS@")
set(VXL_CORE_VIDEO_INCLUDE_DIR "@VXLCORE_INCLUDE_DIR@") #For backward compatibility
set(VXL_CORE_VIDEO_LIBRARIES "vidl")
set(VXL_CORE_VIDEO_FFMPEG_FOUND "@CORE_VIDEO_FFMPEG_FOUND@" )

set(VXL_VGUI_FOUND "@VGUI_FOUND@")
set(VXL_VGUI_INCLUDE_DIR "@OPENGL_INCLUDE_DIR@")
set(VXL_VGUI_LIBRARIES "vgui")

set(VXL_VGUI_WX_FOUND "@VXL_BUILD_VGUI_WX@")

set(VXL_CONTRIB_FOUND "@VXL_BUILD_CONTRIB@")
# VXL contrib has subdirectories handled independently below
# VXL contrib has many libraries

set(VXL_BRL_FOUND "@VXL_BUILD_BRL@")
set(VXL_BRL_INCLUDE_DIR "@BRL_INCLUDE_DIR@")
# VXL BRL has many libraries

set(VXL_BGUI3D_FOUND "@VXL_BUILD_BGUI3D@")
set(VXL_BGUI3D_INCLUDE_DIR "@BGUI3D_INCLUDE_DIR@")

set(VXL_COIN3D_FOUND "@COIN3D_FOUND@")
set(VXL_COIN3D_INCLUDE_DIR "@COIN3D_INCLUDE_DIR@")

set(VXL_GEL_FOUND "@VXL_BUILD_GEL@")
set(VXL_GEL_INCLUDE_DIR "@GEL_INCLUDE_DIR@")
# VXL GEL has many libraries

set(VXL_MUL_FOUND "@VXL_BUILD_MUL@")
set(VXL_MUL_INCLUDE_DIR "@VXL_MUL_INCLUDE_DIR@")
# VXL MUL has many libraries

set(VXL_OUL_FOUND "@VXL_BUILD_OUL@")
set(VXL_OUL_INCLUDE_DIR "@OUL_INCLUDE_DIR@")
# VXL OUL has many libraries

set(VXL_OXL_FOUND "@VXL_BUILD_OXL@")
set(VXL_OXL_INCLUDE_DIR "@OXL_INCLUDE_DIR@")
# VXL OXL has many libraries

set(VXL_RPL_FOUND "@VXL_BUILD_RPL@")
set(VXL_RPL_RGTL_FOUND "@VXL_BUILD_RPL_RGTL@")
set(VXL_RPL_INCLUDE_DIR "@RPL_INCLUDE_DIR@")
# VXL RPL has many libraries

set(VXL_TBL_FOUND "@VXL_BUILD_TBL@")
set(VXL_TBL_INCLUDE_DIR "@TBL_INCLUDE_DIR@")
# VXL TBL has many libraries

set(VXL_CONVERSIONS_FOUND "@VXL_BUILD_CONVERSIONS@")
set(VXL_CONVERSIONS_INCLUDE_DIR "@CONVERSIONS_INCLUDE_DIR@")
# VXL CONVERSIONS has no libraries

set(VXL_TARGETJR_FOUND "@BUILD_TARGETJR@")

# Client projects use these setting to find and use the 3rd party
# libraries that VXL either found on the system or built for itself.
# Sometimes, VXL will point client projects to the library VXL built
# for itself, and sometimes VXL will point client projects to the
# system library it found.

set(VXL_NETLIB_FOUND "@NETLIB_FOUND@")
set(VXL_NETLIB_INCLUDE_DIR "@NETLIB_INCLUDE_DIR@")
set(VXL_NETLIB_LIBRARIES "@NETLIB_LIBRARIES@")

set(VXL_ZLIB_FOUND "@ZLIB_FOUND@")
set(VXL_ZLIB_INCLUDE_DIR "@ZLIB_INCLUDE_DIR@")
set(VXL_ZLIB_LIBRARIES "@ZLIB_LIBRARIES@")

set(VXL_PNG_FOUND "@PNG_FOUND@")
set(VXL_PNG_INCLUDE_DIR "@PNG_INCLUDE_DIR@")
set(VXL_PNG_LIBRARIES "@PNG_LIBRARIES@")

set(VXL_JPEG_FOUND "@JPEG_FOUND@")
set(VXL_JPEG_INCLUDE_DIR "@JPEG_INCLUDE_DIR@")
set(VXL_JPEG_LIBRARIES "@JPEG_LIBRARIES@")

set(VXL_TIFF_FOUND "@TIFF_FOUND@")
set(VXL_TIFF_INCLUDE_DIR "@TIFF_INCLUDE_DIR@")
set(VXL_TIFF_LIBRARIES "@TIFF_LIBRARIES@")

set(VXL_GEOTIFF_FOUND "@GEOTIFF_FOUND@")
set(VXL_GEOTIFF_INCLUDE_DIR "@GEOTIFF_INCLUDE_DIR@")
set(VXL_GEOTIFF_LIBRARIES "@GEOTIFF_LIBRARIES@")

set(VXL_MPEG2_FOUND "@MPEG2_FOUND@")
set(VXL_MPEG2_INCLUDE_DIR "@MPEG2_INCLUDE_DIR@")
set(VXL_MPEG2_LIBRARIES "@MPEG2_LIBRARIES@")

set(VXL_RPLY_FOUND "@RPLY_FOUND@")
set(VXL_RPLY_INCLUDE_DIR "@RPLY_INCLUDE_DIR@")
set(VXL_RPLY_LIBRARIES "@RPLY_LIBRARIES@")

set(VXL_COIN3D_FOUND "@COIN3D_FOUND@")
set(VXL_COIN3D_INCLUDE_DIR "@COIN3D_INCLUDE_DIRS@")
set(VXL_COIN3D_LIBRARY "@COIN3D_LIBRARIES@")

set(VXL_PYTHON_FOUND "@PYTHON_FOUND@")
set(VXL_PYTHON_INCLUDE_PATH "@PYTHON_INCLUDE_PATH@")
set(VXL_PYTHON_PC_INCLUDE_PATH "@PYTHON_PC_INCLUDE_PATH@")
set(VXL_PYTHON_LIBRARY "@PYTHON_LIBRARY@")
set(VXL_PYTHON_DEBUG_LIBRARY "@PYTHON_DEBUG_LIBRARY@")

set(VXL_EXPAT_FOUND "@EXPAT_FOUND@")
set(VXL_EXPAT_INCLUDE_DIR "@EXPAT_INCLUDE_DIR@")
set(VXL_EXPAT_LIBRARIES "@EXPAT_LIBRARIES@")

# Tell UseVXL.cmake that VXLConfig.cmake has been included.
set(VXL_CONFIG_CMAKE 1)

# Import VXL targets.
if(NOT VXL_TARGETS_IMPORTED@VXL_CONFIG_TARGETS_CONDITION@)
  set(VXL_TARGETS_IMPORTED 1)
  include("${CMAKE_CURRENT_LIST_DIR}/VXLTargets.cmake")
endif()
