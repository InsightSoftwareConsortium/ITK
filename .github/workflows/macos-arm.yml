name: ITK.macOS.Arm64

on:
    push:
        branches:
            - main
            - 'release*'
        paths-ignore:
            - '*.md'
            - LICENSE
            - NOTICE
            - 'Documentation/**'
            - 'Utilities/Debugger/**'
            - 'Utilities/ITKv5Preparation/**'
            - 'Utilities/Maintenance/**'
    pull_request:
        paths-ignore:
            - '*.md'
            - LICENSE
            - NOTICE
            - 'Documentation/**'
            - 'Utilities/Debugger/**'
            - 'Utilities/ITKv5Preparation/**'
            - 'Utilities/Maintenance/**'

concurrency:
  group: '${{ github.workflow }}@${{ github.head_ref || github.ref }}'
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

env:
    ExternalDataVersion: 5.4.0
    CMakeVersion: "4.0.1"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 0

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-15
            name: "x86_64-rosetta"
            cmake-build-type: "Release"
            cmake-generator: "Ninja"
            python-version: ""
            ctest-cache: |
              BUILD_SHARED_LIBS:BOOL=OFF
              BUILD_EXAMPLES:BOOL=OFF
              ITK_WRAP_PYTHON:BOOL=OFF
              ITK_USE_CLANG_FORMAT:BOOL=OFF
              CMAKE_OSX_ARCHITECTURES:STRING=x86_64
            ctest-options: ""

          - os: macos-14
            name: "Python"
            cmake-build-type: "Release"
            cmake-generator: "Ninja"
            python-version: "3.11"
            ctest-cache: |
              BUILD_SHARED_LIBS:BOOL=OFF
              BUILD_EXAMPLES:BOOL=OFF
              ITK_WRAP_PYTHON:BOOL=ON
              ITK_USE_CLANG_FORMAT:BOOL=OFF
            ctest-options: "-E itkPyBufferMemoryLeakTest"

    name: macOS-${{ matrix.name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 5
          clean: true

      - name: Set up Python
        if: matrix.python-version != ''
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        if: matrix.python-version != ''
        run: |
          set -x
          python3 -m pip install --upgrade --pre numpy

      - name: Get specific version of CMake, latest Ninja
        uses: lukka/get-cmake@v4.0.1
        with:
          cmakeVersion: ~${{ env.CMakeVersion }}
          ninjaVersion: latest

      - name: Download dashboard script and testing data
        run: |
          set -x
          git clone -b dashboard --single-branch https://github.com/InsightSoftwareConsortium/ITK.git ITK-dashboard

          curl -L https://github.com/InsightSoftwareConsortium/ITK/releases/download/v${{ env.ExternalDataVersion }}/InsightData-${{ env.ExternalDataVersion }}.tar.gz -O
          cmake -E tar xfz InsightData-${{ env.ExternalDataVersion }}.tar.gz
          cmake -E rename InsightToolkit-${{ env.ExternalDataVersion }}/.ExternalData/CID ${{ github.workspace }}/.ExternalData/CID

      - name: Configure CTest script
        run: |
          cat > ITK-dashboard/dashboard.cmake << EOF
          set(CTEST_BUILD_CONFIGURATION "${{ matrix.cmake-build-type }}")
          set(CTEST_CMAKE_GENERATOR "${{ matrix.cmake-generator }}")
          set(dashboard_cache "
              ${{ matrix.ctest-cache }}
          ")
          include(${{ github.workspace }}/ITK-dashboard/github_actions_dashboard.cmake)
          EOF
          cat ITK-dashboard/dashboard.cmake

      - name: Build and test
        run: |
          set -x

          c++ --version
          cmake --version

          ctest -S ${{ github.workspace }}/ITK-dashboard/dashboard.cmake -VV -j 4 ${{ matrix.ctest-options }}
        env:
          CTEST_OUTPUT_ON_FAILURE: 1
