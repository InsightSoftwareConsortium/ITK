trigger:
  branches:
    include:
    - master
    - release*
variables:
  ExternalDataVersion: 5.0rc01
jobs:
- job: Linux
  timeoutInMinutes: 0
  cancelTimeoutInMinutes: 300
  pool:
    vmImage: ubuntu-16.04
  steps:
    - checkout: self
      clean: true
      fetchDepth: 5
    - bash: |
        set -x
        if [ -n "$(System.PullRequest.SourceCommitId)" ]; then
          git checkout $(System.PullRequest.SourceCommitId)
        fi
      displayName: 'Checkout pull request HEAD'

    - bash: |
        set -x
        sudo pip3 install ninja
        sudo apt-get update
        sudo apt-get install -y python3-venv
        sudo python3 -m pip install --upgrade setuptools
        sudo python3 -m pip install scikit-ci-addons
      displayName: 'Install dependencies'

    - bash: |
        set -x
        git clone -b dashboard --single-branch https://github.com/InsightSoftwareConsortium/ITK.git ITK-dashboard

        curl -L https://github.com/InsightSoftwareConsortium/ITK/releases/download/v$(ExternalDataVersion)/InsightData-$(ExternalDataVersion).tar.gz -O
        cmake -E tar xfz InsightData-$(ExternalDataVersion).tar.gz
        cmake -E rename InsightToolkit-$(ExternalDataVersion)/.ExternalData/MD5 $(Build.SourcesDirectory)/.ExternalData/MD5
      workingDirectory: $(Agent.BuildDirectory)
      displayName: 'Download dashboard script and testing data'

    - bash: |
        set -x

        c++ --version
        cmake --version

        export BUILD_EXAMPLES=OFF
        export CTEST_BUILD_CONFIGURATION=MinSizeRel
        export CTEST_OUTPUT_ON_FAILURE=1

        ctest -S ITK-dashboard/azure_dashboard.cmake -V -j 4
      workingDirectory: $(Agent.BuildDirectory)
      displayName: 'Build and test'

    - script: |
        ci_addons ctest_junit_formatter $(Build.SourcesDirectory)-build > $(Agent.BuildDirectory)/JUnitTestResults.xml
      condition: succeededOrFailed()
      displayName: 'Format CTest output in JUnit format'

    - task: PublishTestResults@2
      inputs:
        testResultsFiles: "$(Agent.BuildDirectory)/JUnitTestResults.xml"
        testRunTitle: 'CTest $(Agent.OS)'
      condition: succeededOrFailed()
      displayName: 'Publish test results'
